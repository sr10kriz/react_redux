{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\learn\\\\redux\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\n// its a component from react-redux similar to what we created in context api with provider, it has a special prop named store it accepts redux store as a value/parameter, possible to wrap Provider in any component not only in root component, note: the wrapped parent child child of child component only have the access to redux store, not unwrapped components...\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store/store\";\n// its the redux sstore what we create using redux createStore(), then export those store\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","Provider","App","store","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/react/learn/redux/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\n// its a component from react-redux similar to what we created in context api with provider, it has a special prop named store it accepts redux store as a value/parameter, possible to wrap Provider in any component not only in root component, note: the wrapped parent child child of child component only have the access to redux store, not unwrapped components...\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store/store\";\n// its the redux sstore what we create using redux createStore(), then export those store\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,QAAQ,QAAQ,aAAa;AACtC;;AAEA,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,KAAK,MAAM,eAAe;AACjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,IAAI,GAAGN,QAAQ,CAACO,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTL,OAAA,CAACJ,QAAQ;EAACE,KAAK,EAAEA,KAAM;EAAAQ,QAAA,eACrBN,OAAA,CAACH,GAAG;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACC,CACZ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}